From: Matt Benjamin <mbenjamin@redhat.com>
Date: Tue, 23 Aug 2016 16:50:42 -0400
Subject: rgw_file:  explain semantics of RGWFileHandle::commit

Add a comment explaining why the method currently returns 0
unconditionally.

Signed-off-by: Matt Benjamin <mbenjamin@redhat.com>
(cherry picked from commit b1da1354320cc5f69277b225a293a03cc2a5054f)

Resolves (with following): rhbz#1370331
---
 src/rgw/rgw_file.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/rgw/rgw_file.h b/src/rgw/rgw_file.h
index 65ddf35..40853b0 100644
--- a/src/rgw/rgw_file.h
+++ b/src/rgw/rgw_file.h
@@ -512,6 +512,12 @@ namespace rgw {
     int write(uint64_t off, size_t len, size_t *nbytes, void *buffer);
 
     int commit(uint64_t offset, uint64_t length, uint32_t flags) {
+      /* NFS3 and NFSv4 COMMIT implementation
+       * the current atomic update strategy doesn't actually permit
+       * clients to read-stable until either CLOSE (NFSv4+) or the
+       * expiration of the active write timer (NFS3).  In the
+       * interim, the client may send an arbitrary number of COMMIT
+       * operations which must return a success result */
       return 0;
     }
 
