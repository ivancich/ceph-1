From: Ilya Dryomov <idryomov@gmail.com>
Date: Mon, 3 Oct 2016 14:09:11 +0200
Subject: rbd: recognize lock_on_read option

Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit e857b7896527b676155d6e01c78567337dc33b1c)

Resolves: rhbz#1382437
---
 doc/man/8/rbd.rst              | 3 +++
 src/tools/rbd/action/Kernel.cc | 2 ++
 2 files changed, 5 insertions(+)

diff --git a/doc/man/8/rbd.rst b/doc/man/8/rbd.rst
index b312d02..e78adeb 100644
--- a/doc/man/8/rbd.rst
+++ b/doc/man/8/rbd.rst
@@ -461,6 +461,9 @@ Mapping (per block device) options:
 
 * queue_depth=x - queue depth (since 4.2, default is 128 requests).
 
+* lock_on_read - Acquire exclusive lock on reads, in addition to writes and
+  discards (since 4.9).
+
 
 Examples
 ========
diff --git a/src/tools/rbd/action/Kernel.cc b/src/tools/rbd/action/Kernel.cc
index f8fc413..a488b9b 100644
--- a/src/tools/rbd/action/Kernel.cc
+++ b/src/tools/rbd/action/Kernel.cc
@@ -129,6 +129,8 @@ static int parse_map_options(char *options)
     } else if (!strcmp(this_char, "queue_depth")) {
       if (put_map_option_value("queue_depth", value_char, map_option_int_cb))
         return -EINVAL;
+    } else if (!strcmp(this_char, "lock_on_read")) {
+      put_map_option("lock_on_read", this_char);
     } else {
       std::cerr << "rbd: unknown map option '" << this_char << "'" << std::endl;
       return -EINVAL;
