From: Jason Dillaman <dillaman@redhat.com>
Date: Thu, 16 Mar 2017 12:27:08 -0400
Subject: pybind: fix incorrect exception format strings

Signed-off-by: Jason Dillaman <dillaman@redhat.com>
(cherry picked from commit 68617455f534a612ade1331f43b032ab524704ae)
(cherry picked from commit 332b5174c769f395074255e075de8d2cc1ee4021)

Resolves: rhbz#1439355
---
 src/pybind/rbd/rbd.pyx | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/pybind/rbd/rbd.pyx b/src/pybind/rbd/rbd.pyx
index fa79c33..6e5a45b 100644
--- a/src/pybind/rbd/rbd.pyx
+++ b/src/pybind/rbd/rbd.pyx
@@ -1236,7 +1236,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_get_old_format(self.image, &old)
         if ret != 0:
-            raise make_ex(ret, 'error getting old_format for image' % (self.name))
+            raise make_ex(ret, 'error getting old_format for image %s' % (self.name))
         return old != 0
 
     def size(self):
@@ -1250,7 +1250,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_get_size(self.image, &image_size)
         if ret != 0:
-            raise make_ex(ret, 'error getting size for image' % (self.name))
+            raise make_ex(ret, 'error getting size for image %s' % (self.name))
         return image_size
 
     def features(self):
@@ -1263,7 +1263,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_get_features(self.image, &features)
         if ret != 0:
-            raise make_ex(ret, 'error getting features for image' % (self.name))
+            raise make_ex(ret, 'error getting features for image %s' % (self.name))
         return features
 
     def update_features(self, features, enabled):
@@ -1300,7 +1300,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_get_overlap(self.image, &overlap)
         if ret != 0:
-            raise make_ex(ret, 'error getting overlap for image' % (self.name))
+            raise make_ex(ret, 'error getting overlap for image %s' % (self.name))
         return overlap
 
     def flags(self):
@@ -1313,7 +1313,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_get_flags(self.image, &flags)
         if ret != 0:
-            raise make_ex(ret, 'error getting flags for image' % (self.name))
+            raise make_ex(ret, 'error getting flags for image %s' % (self.name))
         return flags
 
     def is_exclusive_lock_owner(self):
@@ -1326,7 +1326,7 @@ cdef class Image(object):
         with nogil:
             ret = rbd_is_exclusive_lock_owner(self.image, &owner)
         if ret != 0:
-            raise make_ex(ret, 'error getting lock status for image' % (self.name))
+            raise make_ex(ret, 'error getting lock status for image %s' % (self.name))
         return owner == 1
 
     def copy(self, dest_ioctx, dest_name, features=None, order=None,
@@ -1696,7 +1696,7 @@ written." % (self.name, ret, length))
         with nogil:
             ret = rbd_get_stripe_unit(self.image, &stripe_unit)
         if ret != 0:
-            raise make_ex(ret, 'error getting stripe unit for image' % (self.name))
+            raise make_ex(ret, 'error getting stripe unit for image %s' % (self.name))
         return stripe_unit
 
     def stripe_count(self):
@@ -1707,7 +1707,7 @@ written." % (self.name, ret, length))
         with nogil:
             ret = rbd_get_stripe_count(self.image, &stripe_count)
         if ret != 0:
-            raise make_ex(ret, 'error getting stripe count for image' % (self.name))
+            raise make_ex(ret, 'error getting stripe count for image %s' % (self.name))
         return stripe_count
 
     def flatten(self):
