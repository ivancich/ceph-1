From: Matt Benjamin <mbenjamin@redhat.com>
Date: Thu, 18 Aug 2016 10:54:16 -0400
Subject: rgw ldap:  protect rgw::from_base64 from non-base64 input

Also adds unit tests for:
1. empty output from from_base64 (turns out to be harmless)
2. random and specific non-base64 and sort strings
(modified from upstream to avoid alteration of src/test/test_rgw_token.cc)

Signed-off-by: Matt Benjamin <mbenjamin@redhat.com>
(cherry picked from commit 0a4c91ec7652d02673a9b156cd16144d778a3844)

Fixes: http://tracker.ceph.com/issues/17324
Resolves: rhbz#1381694
---
 src/rgw/rgw_file.h     | 8 +++++++-
 src/rgw/rgw_rest_s3.cc | 8 +++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/src/rgw/rgw_file.h b/src/rgw/rgw_file.h
index 0998fa3..60d442e 100644
--- a/src/rgw/rgw_file.h
+++ b/src/rgw/rgw_file.h
@@ -827,7 +827,13 @@ namespace rgw {
       } else {
 	/* try external authenticators (ldap for now) */
 	rgw::LDAPHelper* ldh = rgwlib.get_ldh(); /* !nullptr */
-	RGWToken token{from_base64(key.id)};
+	RGWToken token;
+	/* boost filters and/or string_ref may throw on invalid input */
+	try {
+	  token = rgw::from_base64(key.id);
+	} catch(...) {
+	  token = std::string("");
+	}
 	if (token.valid() && (ldh->auth(token.id, token.key) == 0)) {
 	  /* try to store user if it doesn't already exist */
 	  if (rgw_get_user_info_by_uid(store, token.id, user) < 0) {
diff --git a/src/rgw/rgw_rest_s3.cc b/src/rgw/rgw_rest_s3.cc
index e9f24f3..42c5043 100644
--- a/src/rgw/rgw_rest_s3.cc
+++ b/src/rgw/rgw_rest_s3.cc
@@ -1754,7 +1754,13 @@ int RGWPostObj_ObjStore_S3::get_policy()
 	  << store->ctx()->_conf->rgw_ldap_uri
 	  << dendl;
 
-	RGWToken token{from_base64(s3_access_key)};
+	RGWToken token;
+	/* boost filters and/or string_ref may throw on invalid input */
+	try {
+	  token = rgw::from_base64(s3_access_key);
+	} catch(...) {
+	  token = std::string("");
+	}
 	if (! token.valid())
 	  return -EACCES;
 
