From: Jason Dillaman <dillaman@redhat.com>
Date: Mon, 23 May 2016 22:21:33 -0400
Subject: journal: eliminate watch delay for object refetches

The randomized write sizes of the modified rbd-mirror stress
test results in a lot of journal object with few entries.
Immediately fetch objects when performing a refetch check prior
to closing an empty object.

Signed-off-by: Jason Dillaman <dillaman@redhat.com>
(cherry picked from commit d7b511b854c8ab633dcdb1c935014218b83f4e09)
(cherry picked from commit df2b8d9f0f399dcf9bb0e3eba3a39e14de504c49)

Resolves: rhbz#1336755
---
 src/journal/JournalPlayer.cc | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/journal/JournalPlayer.cc b/src/journal/JournalPlayer.cc
index 66cd7af..a79b2d4 100644
--- a/src/journal/JournalPlayer.cc
+++ b/src/journal/JournalPlayer.cc
@@ -654,6 +654,8 @@ void JournalPlayer::schedule_watch() {
     return;
   }
 
+  double watch_interval = m_watch_interval;
+
   ObjectPlayerPtr object_player = get_object_player();
   switch (m_watch_step) {
   case WATCH_STEP_FETCH_CURRENT:
@@ -668,11 +670,13 @@ void JournalPlayer::schedule_watch() {
                          << object_player->get_oid()
                          << dendl;
         object_player->clear_refetch_required();
+        watch_interval = 0;
       }
     }
     break;
   case WATCH_STEP_FETCH_FIRST:
     object_player = m_object_players.begin()->second.begin()->second;
+    watch_interval = 0;
     break;
   default:
     assert(false);
@@ -681,7 +685,7 @@ void JournalPlayer::schedule_watch() {
   ldout(m_cct, 20) << __func__ << ": scheduling watch on "
                    << object_player->get_oid() << dendl;
   C_Watch *ctx = new C_Watch(this, object_player->get_object_number());
-  object_player->watch(ctx, m_watch_interval);
+  object_player->watch(ctx, watch_interval);
 }
 
 void JournalPlayer::handle_watch(uint64_t object_num, int r) {
