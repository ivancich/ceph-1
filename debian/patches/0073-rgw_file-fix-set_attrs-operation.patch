From: Matt Benjamin <mbenjamin@redhat.com>
Date: Tue, 20 Sep 2016 17:32:03 -0400
Subject: rgw_file: fix set_attrs operation

The effective part of this change is to always set a value
for RGW_ATTR_UNIX_KEY1 (because it is expected later).

Secondarily, do not pass the address of the to-set attributes
buffer::list as remove attrs--this is confusing.

Signed-off-by: Matt Benjamin <mbenjamin@redhat.com>
(cherry picked from commit 08afb40b2812270a6af3cd1965e8c03c10392ace)

Fixes: http://tracker.ceph.com/issues/17393
Signed-off-by: Matt Benjamin <mbenjamin@redhat.com>
Resolves: rhbz#1358020
---
 src/rgw/rgw_file.cc | 1 +
 src/rgw/rgw_op.cc   | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/rgw/rgw_file.cc b/src/rgw/rgw_file.cc
index bb470c5..4f513c9 100644
--- a/src/rgw/rgw_file.cc
+++ b/src/rgw/rgw_file.cc
@@ -592,6 +592,7 @@ namespace rgw {
     rgw_fh->encode_attrs(ux_key, ux_attrs);
 
     /* save attrs */
+    req.emplace_attr(RGW_ATTR_UNIX_KEY1, std::move(ux_key));
     req.emplace_attr(RGW_ATTR_UNIX1, std::move(ux_attrs));
 
     rc = rgwlib.get_fe()->execute_req(&req);
diff --git a/src/rgw/rgw_op.cc b/src/rgw/rgw_op.cc
index b6fbe67..b4a09d7 100644
--- a/src/rgw/rgw_op.cc
+++ b/src/rgw/rgw_op.cc
@@ -4688,7 +4688,7 @@ void RGWSetAttrs::execute()
   store->set_atomic(s->obj_ctx, obj);
 
   if (!s->object.empty()) {
-    op_ret = store->set_attrs(s->obj_ctx, obj, attrs, &attrs);
+    op_ret = store->set_attrs(s->obj_ctx, obj, attrs, nullptr);
   } else {
     for (auto& iter : attrs) {
       s->bucket_attrs[iter.first] = std::move(iter.second);
