From: Jason Dillaman <dillaman@redhat.com>
Date: Fri, 13 May 2016 16:34:44 -0400
Subject: journal: do not flag append as full if already known to be full

Once an object has overflowed or a close is in-progress, re-attempting
to close the object is not needed since the async process is already
underway.

Signed-off-by: Jason Dillaman <dillaman@redhat.com>
(cherry picked from commit 45620dc312ca2aeaf084638144aaa4783b622c4a)
(cherry picked from commit 870c21c738e42d2cf34478bfa0631d602175dadc)
---
 src/journal/ObjectRecorder.cc | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/journal/ObjectRecorder.cc b/src/journal/ObjectRecorder.cc
index f7f1966..78b51a2 100644
--- a/src/journal/ObjectRecorder.cc
+++ b/src/journal/ObjectRecorder.cc
@@ -69,7 +69,8 @@ bool ObjectRecorder::append(const AppendBuffers &append_buffers) {
   } else {
     cancel_append_task();
   }
-  return (m_size + m_pending_bytes >= m_soft_max_size);
+  return (!m_object_closed && !m_overflowed &&
+          m_size + m_pending_bytes >= m_soft_max_size);
 }
 
 void ObjectRecorder::flush(Context *on_safe) {
