From: David Zafman <dzafman@redhat.com>
Date: Fri, 20 May 2016 13:58:32 -0700
Subject: osd: CLEANUP: Remove unused pending_read member

Remove unused struct

Signed-off-by: David Zafman <dzafman@redhat.com>
(cherry picked from commit 36fd68c96653e83f87767feb08530a9fc6e841b0)
(cherry picked from commit e6614e0a11a63f452add2e97b27204a64218bbc3)

Resolves: rhbz#1414613
---
 src/osd/ECBackend.cc | 2 --
 src/osd/ECBackend.h  | 3 +--
 2 files changed, 1 insertion(+), 4 deletions(-)

diff --git a/src/osd/ECBackend.cc b/src/osd/ECBackend.cc
index 975c49b..b3a47c3 100644
--- a/src/osd/ECBackend.cc
+++ b/src/osd/ECBackend.cc
@@ -146,7 +146,6 @@ ostream &operator<<(ostream &lhs, const ECBackend::RecoveryOp &rhs)
 	     << " missing_on_shards=" << rhs.missing_on_shards
 	     << " recovery_info=" << rhs.recovery_info
 	     << " recovery_progress=" << rhs.recovery_progress
-	     << " pending_read=" << rhs.pending_read
 	     << " obc refcount=" << rhs.obc.use_count()
 	     << " state=" << ECBackend::RecoveryOp::tostr(rhs.state)
 	     << " waiting_on_pushes=" << rhs.waiting_on_pushes
@@ -162,7 +161,6 @@ void ECBackend::RecoveryOp::dump(Formatter *f) const
   f->dump_stream("missing_on_shards") << missing_on_shards;
   f->dump_stream("recovery_info") << recovery_info;
   f->dump_stream("recovery_progress") << recovery_progress;
-  f->dump_bool("pending_read", pending_read);
   f->dump_stream("state") << tostr(state);
   f->dump_stream("waiting_on_pushes") << waiting_on_pushes;
   f->dump_stream("extent_requested") << extent_requested;
diff --git a/src/osd/ECBackend.h b/src/osd/ECBackend.h
index b691658..6ce0f11 100644
--- a/src/osd/ECBackend.h
+++ b/src/osd/ECBackend.h
@@ -202,7 +202,6 @@ private:
     ObjectRecoveryInfo recovery_info;
     ObjectRecoveryProgress recovery_progress;
 
-    bool pending_read;
     enum state_t { IDLE, READING, WRITING, COMPLETE } state;
 
     static const char* tostr(state_t state) {
@@ -237,7 +236,7 @@ private:
 
     void dump(Formatter *f) const;
 
-    RecoveryOp() : pending_read(false), state(IDLE) {}
+    RecoveryOp() : state(IDLE) {}
   };
   friend ostream &operator<<(ostream &lhs, const RecoveryOp &rhs);
   map<hobject_t, RecoveryOp, hobject_t::BitwiseComparator> recovery_ops;
